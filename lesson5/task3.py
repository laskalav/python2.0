"""
Задание 3. Генератор объединения двух списков

Есть два списка:
 tutors = [ 'Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис', 'Елена' ]
 classes = [ '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А' ]


Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>, <klass>), например:
('Иван', '9А')
('Анастасия', '7В')
...

Количество генерируемых кортежей должно быть равно длине списка tutors. Если в списке classes меньше элементов,
 чем в списке tutors, необходимо вывести последние кортежи в виде: (<tutor>, None), например:
('Станислав', None)


Доказать, что вы создали именно генератор. Проверить его работу вплоть до истощения. Подумать,
в каких ситуациях генератор даст эффект.
"""


tutors = ['Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис', 'Елена', 'Таня', "Ира", "Илья", "Катя"]
classes = ['9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А', "5A", "10D", "11e", "3B"]


def make_the_same():
    el = len(tutors) - len(classes)
    while len(tutors) != len(classes):
        if el < 0:
            for element in range(0, abs(el)):
                tutors.append(None)
        elif el > 0:
            for element in range(0, el):
                classes.append(None)
    else:
        for element in zip(tutors, classes):
            yield element


for i in make_the_same():
    print(i)



